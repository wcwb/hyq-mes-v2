# HYQ MES V2 顶部菜单栏增强 PRD

## 项目概述
HYQ MES V2 系统界面增强项目，重点改进顶部菜单栏功能，提升用户操作体验和界面美观度。在当前应用布局基础上增强顶部菜单栏功能，通过Tab导航和全局搜索减少页面跳转，优化界面布局，提供一致的交互体验。

## 技术栈与架构原则
- **前端框架**：Vue 3 + Composition API + TypeScript
- **页面框架**：Inertia.js
- **UI组件库**：reka-ui（类shadcn设计系统）
- **样式系统**：Tailwind CSS
- **图标库**：lucide-vue-next
- **状态管理**：Vue 3 Composables + LocalStorage
- **测试框架**：Vitest + Vue Test Utils + Playwright

### 架构原则
1. 渐进式增强：在现有基础上逐步添加功能
2. 组件复用：最大化利用现有组件和设计系统
3. 性能优先：确保新功能不影响现有性能
4. 可访问性：遵循WCAG 2.1 AA标准
5. 国际化支持：与现有i18n系统集成

## 界面布局设计

### 布局结构
```
┌─────────────────────────────────────────────────────────────────┐
│  [☰] [🔍搜索栏]                         [🌐语言] [🌙主题] [👤用户] │
│  左侧功能区                                        右侧工具区    │
├─────────────────────────────────────────────────────────────────┤
│  [首页] [订单管理] [生产管理] [质量检测] [设置] +              [×] │
│  Tab导航区（类似浏览器标签）                                    │
└─────────────────────────────────────────────────────────────────┘
```

### 视觉设计规范
- **顶部菜单栏高度**：`h-14` (56px)
- **Tab导航高度**：`h-10` (40px)
- **组件间距**：`gap-2` (8px)
- **内边距**：`px-4` (16px)
- **动画效果**：
  - Tab切换：`transition-all duration-200 ease-in-out`
  - 搜索栏展开：`transition-width duration-300 ease-out`
  - 主题切换：`transition-colors duration-200`

### 响应式设计
- **桌面端（lg及以上）**：完整功能布局，所有工具栏组件可见，Tab导航完全展开
- **移动端（lg以下）**：简化布局，工具栏收纳到Sheet中，搜索功能保留，Tab导航支持滑动

## 核心功能需求（按优先级排序）

### 1. 基础布局重构（P0 - 最高优先级）

#### 1.1 顶部菜单栏主组件
**依赖关系**：无  
**技术实现**：
- 创建TopMenuBar.vue组件，支持桌面端和移动端布局
- 左侧功能区：SidebarTrigger + SearchBar
- 右侧工具区：LanguageToggle + ThemeToggle + UserMenu
- 集成现有组件：直接使用SidebarTrigger，简化LanguageSwitcher为LanguageToggle，简化AppearanceTabs为ThemeToggle

#### 1.2 现有组件集成
**依赖关系**：基础布局  
**技术实现**：
- **SidebarTrigger**：直接使用现有组件
- **LanguageSwitcher**：简化为LanguageToggle下拉菜单
- **AppearanceTabs**：简化为ThemeToggle按钮切换
- **UserMenuContent**：保持现有功能不变

### 2. 基础搜索功能（P0 - 最高优先级）

#### 2.1 搜索栏组件设计
**依赖关系**：基础布局  
**技术实现**：
- 创建SearchBar.vue组件，使用CommandDialog模式
- 支持快捷键（Ctrl+K/Cmd+K）打开搜索对话框
- 实现搜索触发器：Button样式，占位符文本，快捷键提示

#### 2.2 搜索功能逻辑
**依赖关系**：搜索栏组件  
**技术实现**：
- 创建useGlobalSearch composable
- 实现防抖搜索：useDebouncedRef('', 300)
- 支持搜索历史：useLocalStorage保存最近10次搜索
- 搜索结果分组：页面、订单、产品、客户等
- API集成：支持本地页面搜索和远程数据搜索

### 3. Tab导航系统（P1 - 高优先级）

#### 3.1 Tab数据结构定义
```typescript
interface TabItem {
  id: string;
  title: string;
  href: string;
  isActive: boolean;
  isDirty?: boolean;
  isClosable?: boolean;
  icon?: LucideIcon;
  lastAccessed?: number;
}
```

#### 3.2 Tab状态管理
**依赖关系**：基础布局、路由系统  
**技术实现**：
- 创建useTabNavigation composable
- Tab数量限制：最多12个标签页
- 智能移除策略：移除最久未访问的可关闭Tab
- 状态持久化：LocalStorage保存Tab状态

#### 3.3 Inertia.js路由集成
**依赖关系**：Tab导航核心、Inertia.js  
**技术实现**：
- 创建useInertiaTabNavigation composable
- 集成router.get方法，preserveState和preserveScroll支持
- 页面标题映射：路由名称到中文标题的转换
- 自动Tab管理：页面跳转时自动添加或激活Tab

### 4. 搜索功能增强（P2 - 中优先级）

#### 4.1 多数据源搜索
**依赖关系**：基础搜索功能  
**技术实现**：
- 创建useAdvancedSearch composable
- 定义SearchProvider接口，支持多种搜索源
- 并行搜索策略：Promise.all同时搜索所有数据源

#### 4.2 搜索安全与性能
- 输入清理：移除HTML标签和JavaScript协议
- 频率限制：每用户每分钟最多30次搜索
- 结果缓存：避免重复API调用
- 分页支持：大数据集分页处理

### 5. Tab导航增强功能（P2 - 中优先级）

#### 5.1 Tab拖拽重排序
**依赖关系**：Tab导航核心  
**技术实现**：
- 使用@vueuse/integrations/useSortable
- 创建TabDragHandler.vue组件
- 动画效果：200ms排序动画
- 状态同步：拖拽后更新Tab顺序

#### 5.2 Tab右键菜单
**依赖关系**：Tab导航核心  
**技术实现**：
- 创建TabContextMenu.vue组件
- 菜单选项：关闭标签、关闭其他、关闭所有、复制标签
- 快捷键支持：Ctrl+W关闭当前标签

### 6. 国际化支持（P3 - 低优先级）

#### 6.1 多语言配置
**依赖关系**：现有i18n系统  
**技术实现**：
- 创建topMenu.json语言包（中英文）
- 涵盖搜索、Tab、主题、用户菜单所有文本
- 集成现有vue-i18n配置
- 支持动态语言切换

## 安全与性能要求

### 安全考虑
1. **输入验证与XSS防护**
   - 搜索查询清理：移除HTML标签、JavaScript协议，限制长度100字符
   - Tab URL验证：同源检查、路径白名单验证

2. **搜索频率限制**
   - 每用户每分钟最多30次搜索
   - 自动清理1分钟前的请求记录
   - 达到限制时返回错误提示

### 性能优化
1. **组件延迟加载**
   - SearchDialog、TabPreview等重型组件使用defineAsyncComponent
   - 按需加载，减少初始bundle大小

2. **状态持久化优化**
   - Tab状态使用LocalStorage持久化
   - 定期清理过期数据（7天未访问）
   - 控制存储大小，避免影响性能

3. **内存管理**
   - Tab数量限制：最多12个
   - 自动清理：移除最久未访问的Tab
   - 事件监听器正确清理

## 测试策略

### 单元测试
- **测试框架**：Vitest + Vue Test Utils
- **覆盖目标**：composables、组件逻辑、工具函数
- **测试用例**：
  - Tab导航：添加、关闭、切换、数量限制
  - 搜索功能：防抖、历史记录

### E2E测试
- **测试框架**：Playwright
- **测试场景**：
  - 用户通过搜索导航到页面
  - Tab的完整生命周期操作
  - 响应式布局在不同设备的表现

### 性能测试
- 首次加载时间监控
- Tab切换响应时间测试
- 搜索响应时间测试
- 内存使用量监控

## 验收标准

### 功能完整性
- [ ] 顶部菜单栏正确显示和布局
- [ ] 搜索栏支持快捷键打开和全局搜索
- [ ] Tab导航支持添加、关闭、切换、重排序
- [ ] 响应式布局在桌面端和移动端正常工作

### 性能标准
- [ ] 首次加载时间不超过当前版本的110%
- [ ] Tab切换响应时间小于100ms
- [ ] 搜索响应时间小于300ms
- [ ] 无内存泄漏问题
- [ ] 支持最多12个Tab同时打开

### 用户体验
- [ ] 所有快捷键功能正常（Ctrl+K搜索、Ctrl+W关闭Tab）
- [ ] 动画效果流畅自然
- [ ] 无障碍功能完备（键盘导航、屏幕阅读器支持）
- [ ] 多语言支持正常
- [ ] 主题切换无闪烁

### 兼容性
- [ ] 支持Chrome、Firefox、Safari、Edge最新版本
- [ ] 移动端Safari和Chrome正常显示
- [ ] 触摸设备交互正常
- [ ] 键盘导航完整支持

### 安全性
- [ ] 搜索输入正确清理和验证
- [ ] Tab URL验证机制工作
- [ ] 搜索频率限制生效

## 实施计划

### 阶段一：基础架构（2-3天）
**目标**：建立核心组件和基础布局
- [ ] 创建TopMenuBar主组件
- [ ] 重构现有AppHeader组件
- [ ] 集成SidebarTrigger和现有工具组件
- [ ] 建立基础样式和响应式布局

### 阶段二：搜索功能（2-3天）
**目标**：实现基础搜索功能
- [ ] 开发SearchBar组件
- [ ] 实现基础搜索逻辑
- [ ] 添加快捷键支持

### 阶段三：Tab导航（3-4天）
**目标**：实现Tab导航核心功能
- [ ] 开发Tab导航组件库
- [ ] 实现Tab状态管理
- [ ] 集成Inertia.js路由
- [ ] 添加基础交互功能

### 阶段四：功能完善（2-3天）
**目标**：添加高级功能和优化
- [ ] 实现Tab拖拽重排序
- [ ] 添加右键菜单
- [ ] 完善搜索功能
- [ ] 性能优化

### 阶段五：测试与部署（1-2天）
**目标**：确保质量和稳定性
- [ ] 单元测试编写
- [ ] E2E测试编写
- [ ] 无障碍功能测试
- [ ] 性能测试

## 风险评估与缓解

### 技术风险
| 风险项 | 影响程度 | 发生概率 | 缓解策略 |
|--------|----------|----------|----------|
| Tab导航内存泄漏 | 高 | 中 | 实施严格的Tab数量限制和自动清理机制 |
| 搜索性能问题 | 中 | 中 | 实施防抖、缓存和分页策略 |
| Inertia.js集成问题 | 中 | 中 | 充分测试路由状态管理 |

### 用户体验风险
| 风险项 | 影响程度 | 发生概率 | 缓解策略 |
|--------|----------|----------|----------|
| 学习成本过高 | 中 | 中 | 提供引导教程和帮助文档 |
| 移动端体验差 | 高 | 中 | 响应式设计和触摸优化 |
| 功能发现性差 | 中 | 中 | 明确的视觉提示和快捷键显示 |

## 成功指标
- 页面切换效率提升30%
- 用户查找功能时间减少50%
- 界面一致性评分达到90%以上
- 移动端可用性评分达到85%以上
- 单元测试覆盖率达到80%以上

## 后续优化方向

### 短期优化（1-3个月）
- 收集用户使用数据和反馈
- 优化搜索算法和结果排序
- 完善移动端体验
- 增加更多快捷键支持

### 中期优化（3-6个月）
- 实施AI驱动的智能搜索建议
- 添加Tab预览和缩略图功能
- 集成工作流程快捷操作
- 支持自定义工具栏布局

### 长期优化（6-12个月）
- 实现跨设备Tab同步
- 添加语音搜索功能
- 集成第三方应用和插件
- 支持个性化推荐和智能助手

## 环境变量配置
```env
# 搜索功能配置
VITE_SEARCH_ENABLED=true
VITE_SEARCH_CACHE_TTL=30
VITE_MAX_SEARCH_RESULTS=10

# Tab导航配置
VITE_MAX_TABS=12
VITE_TAB_PERSISTENCE=true
VITE_TAB_DRAG_ENABLED=true

# 性能配置
VITE_SEARCH_DEBOUNCE_MS=300
VITE_TAB_CLEANUP_INTERVAL=86400000
```

**总预估工期：8-12天**  
**核心功能完成：6-8天**  
**完整功能交付：8-12天** 